---
# tasks file for CheckDBStatusPNP

- name: Validate if server SQL server or not
  win_command: sqlcmd -S "{{ target_host }}" -U "{{ username1 }}" -P "{{ password1 }}" -Q "select @@VERSION"
  register: version_output

- debug:
    var: version_output

- name: Checks if the given Database exists or not
  win_command: sqlcmd -S "{{ target_host }}" -U "{{ username1 }}" -P "{{ password1 }}" -Q " select name from sys.sysdatabases where name="{{ dbName }}"";
  register: db_exists

- debug:
    var: db_exists

- name: Report status of database
  win_command: sqlcmd -S "{{ target_host }}" -U "{{ username1 }}" -P "{{ password1 }}"  -Q " SELECT '{{dbName}}' AS DatabaseName, DATABASEPROPERTYEX('{{dbName}}', 'Status') AS DBStatus"
  register: db_status
#  when: db_exists.name == {{ dbName }}

- debug:
    var: db_status


- set_fact:
    status_code: 2
    version_error: "{{version_output.stderr}}"
  when: version_output is failed

- set_fact:
    status_code: 2
    db_error: "{{db_exists.stderr}}"
  when: db_exists is failed and version_output is success

- set_fact:
    status_code: 2
    db_status_error: "{{db_status.stderr}}"
  when: db_status is failed and db_exists is success

- set_fact:
    status_code: 2
    error_message: "{{free_space.stdout_lines}}"
  when: '"{{dbName}}" not in db_exists.stdout and version_output is success and db_exists is success'

